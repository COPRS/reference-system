### Compliance to integration procedure v1.11 applied
##    Kafka configuration
#       Set replication count
app.*.spring.cloud.stream.kafka.binder.replicationFactor=3
app.*.spring.cloud.stream.kafka.streams.binder.replicationFactor=3
app.*.spring.cloud.stream.kafka.streams.binder.configuration.replication.factor=3

#       Set retention for all topic 
#app.*.spring.cloud.stream.kafka.bindings.input.consumer.topic.properties.retention.ms=2678400000
#app.*.spring.cloud.stream.kafka.bindings.input.consumer.ingestion-s1-sgs-part1.ingestion-s1-sgs-filter.properties.retention.ms=2678400000
#app.*.spring.cloud.stream.kafka.bindings.input.consumer.ingestion-s1-sgs-part1.ingestion-s1-sgs-trigger.properties.retention.ms=2678400000

# Partition count for producer filter
app.ingestion-edip-filter.spring.cloud.stream.kafka.binder.autoAddPartitions=true
app.ingestion-edip-filter.spring.cloud.stream.kafka.binder.minPartitionCount=6


# Lag Balancing
app.ingestion-edip-filter.spring.cloud.stream.kafka.bindings.input.producer.configuration.partitioner.class=esa.s1pdgs.cpoc.message.kafka.LagBasedPartitioner
app.ingestion-edip-filter.spring.cloud.stream.kafka.binder.producerProperties.lag-based-partitioner.delay-seconds=30
app.ingestion-edip-filter.spring.cloud.stream.kafka.binder.producerProperties.lag-based-partitioner.consumer-group=ingestion-pedc-part1
app.ingestion-edip-filter.spring.cloud.stream.kafka.binder.producerProperties.lag-based-partitioner.topics-with-priority.ingestion-pedc-part1.ingestion-edip-filter=1


# Kafka read only one message with timeout (in this case set to 10 minutes)
app.ingestion-edip-worker.spring.cloud.stream.kafka.bindings.input.consumer.configuration.max.poll.records=1
app.ingestion-edip-worker.spring.cloud.stream.kafka.bindings.input.consumer.configuration.max.poll.interval.ms=600000

# Application properties
app.*.spring.kafka.bootstrap-servers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.*.main.banner-mode=off
app.*.management.endpoint.health.show-details=always
#app.*.logging.config=/log/log4j2_debug.yml
app.*.logging.config=/log/log4j2.yml

# Prevent auto creation of kafka topics
#app.*.spring.cloud.stream.kafka.binder.autoAddPartitions=false
#app.*.spring.cloud.stream.kafka.binder.autoCreateTopics=false

# Chain version
app.*.common.rsChainName=INGESTION-PEDC
app.*.common.rsChainVersion=1.14.0
version.ingestion-edip-trigger=1.14.0
version.ingestion-edip-filter=1.14.0
version.ingestion-edip-worker=1.14.0

# Allow heavy message from ingestion-trigger
app.ingestion-edip-trigger.spring.cloud.stream.default.producer.configuration.max.request.size=2000000

# Ingestion Trigger

app.ingestion-edip-trigger.spring.cloud.stream.function.bindings.newInboxService-out-0=output
app.ingestion-edip-trigger.spring.cloud.stream.function.definition=newInboxService
app.ingestion-edip-trigger.application.name=coprs-ingestion-edip-pedc-trigger
#app.ingestion-edip-trigger.application.name=coprs-ingestion-edip-bedc-trigger
app.ingestion-edip-trigger.process.hostname=edip-pedc-ingestion-trigger-0
#app.ingestion-edip-trigger.process.hostname=edip-bedc-ingestion-trigger-0
#app.ingestion-edip-trigger.process.hostname=${HOSTNAME}
app.ingestion-edip-trigger.spring.integration.poller.fixed-delay=300000
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.directory=ftps://154.14.100.130:21/NOMINAL/
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.matchRegex=^([A-Za-z_]{4}/)?([0-9A-Za-z_]{1})1([0-9A-Za-z_]{1})/([0-9A-Za-z_]+)/(ch[0|_]?[1-2]/)?(DCS_[0-9]{2}_([a-zA-Z0-9_]*)_ch([12])_(DSDB|DSIB).*\\.(raw|aisp|xml|RAW|AISP|XML))$
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.ignoreRegex=$a
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.ignoreRegex=(^\\..*|.*\\.tmp$|db.*|^lost\+found$)
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.type=edip
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.ftpDirectoryListing=false
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.family=EDRS_SESSION
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.stationName=WILE
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.missionId=S1
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.station-retention-time=7
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.ignore-files-before-date=2023-01-20T10:00:00.000Z

## inbox for S1 BEDC
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.directory=ftps://154.14.100.194:21/NOMINAL/
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.matchRegex=^([A-Za-z_]{4}/)?([0-9A-Za-z_]{1})1([0-9A-Za-z_]{1})/([0-9A-Za-z_]+)/(ch[0|_]?[1-2]/)?(DCS_[0-9]{2}_([a-zA-Z0-9_]*)_ch([12])_(DSDB|DSIB).*\\.(raw|aisp|xml|RAW|AISP|XML))$
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.ignoreRegex=(^\\..*|.*\\.tmp$|db.*|^lost\+found$)
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.type=edip
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.ftpDirectoryListing=true
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.family=EDRS_SESSION
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.stationName=EDRS
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.missionId=S1
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.station-retention-time=7
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.ignore-files-before-date=2023-01-24T08:00:00.000Z

## inbox for S2_L0_DS
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.directory=ftps://154.14.100.130:21/NOMINAL/
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.matchRegex=^([A-Za-z_]{4}/)?([0-9A-Za-z_]{1})2([0-9A-Za-z_]{1})/([0-9A-Za-z_]+)/(ch[0|_]?[1-2]/)?(DCS_[0-9]{2}_([a-zA-Z0-9_]*)_ch([12])_(DSDB|DSIB).*\\.(raw|aisp|xml|RAW|AISP|XML))$
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.ignoreRegex=$a
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.ignoreRegex=(^\\..*|.*\\.tmp$|db.*|^lost\+found$)

app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.type=edip
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.ftpDirectoryListing=false
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.family=EDRS_SESSION
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.stationName=WILE
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.missionId=S2
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.station-retention-time=7
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.ignore-files-before-date=2023-05-13T21:59:59.000Z

## inbox for S2_L0_GR
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.directory=ftps://rs-edip-mock-svc:21/S2_L0_GR/
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.matchRegex=^(S2)(A|B|_)_([A-Z0-9]{4})_(MSI_L0__GR)_\\w{4}_(\\d{8}T\\d{6})(.*)$
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.ignoreRegex=(^\\..*|.*\\.tmp$|db.*|^lost\+found$)
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.type=edip
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.ftpDirectoryListing=true
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.family=S2_L0_GR
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.stationName=SGS_
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.missionId=S2
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.station-retention-time=7
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.ignore-files-before-date=2020-11-24T08:00:00.000Z

## inbox for extracted SAD files
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox4.directory=ftps://rs-edip-mock-svc:21/S2_SAD/
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox4.matchRegex=^(S2)(A|B|_)_([A-Z0-9]{4})_(AUX_SAD).*$
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox4.ignoreRegex=(^\\..*|.*\\.tmp$|db.*|^lost\+found$)
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox4.type=edip
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox4.ftpDirectoryListing=true
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox4.family=S2_SAD
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox4.stationName=SGS_
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox4.missionId=S2
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox4.station-retention-time=7
#app.ingestion-edip-trigger.ingestion-trigger.polling.inbox4.ignore-files-before-date=2020-11-24T08:00:00.000Z

## MongoDB
app.ingestion-edip-trigger.mongodb.host=mongodb-0.mongodb-headless.database.svc.cluster.local
app.ingestion-edip-trigger.mongodb.port=27017
app.ingestion-edip-trigger.mongodb.database=coprs
app.ingestion-edip-trigger.mongodb.username=${MONGO_USERNAME}
app.ingestion-edip-trigger.mongodb.password=${MONGO_PASSWORD}

## EDIP Client
app.ingestion-edip-trigger.edip.host-configs.host1.serverName=154.14.100.130
app.ingestion-edip-trigger.edip.host-configs.host1.user=${EDIP_USERNAME}
app.ingestion-edip-trigger.edip.host-configs.host1.pass=${EDIP_PASSWORD}
app.ingestion-edip-trigger.edip.host-configs.host1.trustSelfSignedCertificate=true
app.ingestion-edip-trigger.edip.host-configs.host1.encryptDataChannel=false
app.ingestion-edip-trigger.edip.host-configs.host1.ftpsSslSessionReuse=true
app.ingestion-edip-trigger.edip.host-configs.host1.useExtendedMasterSecret=false
app.ingestion-edip-trigger.edip.host-configs.host1.connectTimeoutSec=60
app.ingestion-edip-trigger.edip.host-configs.host1.pasv=true
app.ingestion-edip-trigger.edip.host-configs.host1.enableHostnameVerification=false
app.ingestion-edip-trigger.edip.host-configs.host1.sslProtocol=TLSv1.2
app.ingestion-edip-trigger.edip.host-configs.host1.explicitFtps=true
#app.ingestion-edip-trigger.edip.host-configs.host1.keyManagerKeyStore=
app.ingestion-edip-trigger.edip.host-configs.host1.keyManagerKeyStorePassword=changeit
app.ingestion-edip-trigger.edip.host-configs.host1.trustManagerKeyStore=/ssl/truststore/truststore.jks
app.ingestion-edip-trigger.edip.host-configs.host1.trustManagerKeyStorePassword=v5qn3CzRi5HMsfSnq
app.ingestion-edip-trigger.edip.host-configs.host1.listingTimeoutSec=180
app.ingestion-edip-trigger.edip.enableRobustFtpClient=true


app.ingestion-edip-filter.spring.cloud.stream.function.bindings.filter-in-0=input
app.ingestion-edip-filter.spring.cloud.stream.function.bindings.filter-out-0=output
app.ingestion-edip-filter.spring.cloud.stream.function.definition=filter
app.ingestion-edip-filter.application.name=coprs-ingestion-edip-filter
app.ingestion-edip-filter.process.hostname=edip-ingestion-filter-0
app.ingestion-edip-filter.ingestion-filter.polling-interval-ms=100
app.ingestion-edip-filter.ingestion-filter.config.S1.cron-definition=* * 19-23 ? * FRI *
app.ingestion-edip-filter.ingestion-filter.config.S2.cron-definition=* * 22-23 ? * SUN *
#app.ingestion-edip-filter.ingestion-filter.config.S3.cron-definition=* * 0-8 ? * WED *



# Ingestion Worker
app.ingestion-edip-worker.spring.cloud.stream.function.bindings.ingest-in-0=input
app.ingestion-edip-worker.spring.cloud.stream.function.bindings.ingest-out-0=output
app.ingestion-edip-worker.spring.cloud.stream.function.definition=ingest
app.ingestion-edip-worker.application.name=coprs-ingestion-edip-pedc-worker
app.ingestion-edip-worker.process.hostname=edip-pedc-ingestion-worker-0
app.ingestion-edip-worker.ingestion-worker.hostname=${HOSTNAME}
app.ingestion-edip-worker.ingestion-worker.polling-interval-ms=10000
app.ingestion-edip-worker.ingestion-worker.max-retries=10
app.ingestion-edip-worker.ingestion-worker.tempo-retry-ms=10000
app.ingestion-edip-worker.ingestion-worker.buffer-inputs=false
app.ingestion-edip-worker.edip.host-configs.host1.serverName=154.14.100.130
app.ingestion-edip-worker.edip.host-configs.host1.user=${EDIP_USERNAME}
app.ingestion-edip-worker.edip.host-configs.host1.pass=${EDIP_PASSWORD}
app.ingestion-edip-worker.edip.host-configs.host1.trustSelfSignedCertificate=true
app.ingestion-edip-worker.edip.host-configs.host1.encryptDataChannel=false
app.ingestion-edip-worker.edip.host-configs.host1.ftpsSslSessionReuse=true
app.ingestion-edip-worker.edip.host-configs.host1.useExtendedMasterSecret=false
app.ingestion-edip-worker.edip.host-configs.host1.connectTimeoutSec=60
app.ingestion-edip-worker.edip.host-configs.host1.pasv=true
app.ingestion-edip-worker.edip.host-configs.host1.enableHostnameVerification=false
app.ingestion-edip-worker.edip.host-configs.host1.sslProtocol=TLSv1.2
app.ingestion-edip-worker.edip.host-configs.host1.explicitFtps=true
#app.ingestion-edip-worker.edip.host-configs.host1.keyManagerKeyStore=test
app.ingestion-edip-worker.edip.host-configs.host1.keyManagerKeyStorePassword=changeit
app.ingestion-edip-worker.edip.host-configs.host1.trustManagerKeyStore=/ssl/truststore/truststore.jks
app.ingestion-edip-worker.edip.host-configs.host1.trustManagerKeyStorePassword=v5qn3CzRi5HMsfSnq
app.ingestion-edip-worker.edip.host-configs.host1.listingTimeoutSec=180
app.ingestion-edip-worker.edip.enableRobustFtpClient=true


# Deployer properties
deployer.*.kubernetes.imagePullPolicy=Always
deployer.*.kubernetes.imagePullSecrets=spring-cloud-dataflow-registry-dockersecret

deployer.ingestion-edip-trigger.kubernetes.affinity.nodeAffinity={ requiredDuringSchedulingIgnoredDuringExecution: { nodeSelectorTerms: [ { matchExpressions: [ { key: 'node-role.kubernetes.io/gateway', operator: 'In', values: ['pedc']}]}]}}
deployer.ingestion-edip-worker.kubernetes.affinity.nodeAffinity={ requiredDuringSchedulingIgnoredDuringExecution: { nodeSelectorTerms: [ { matchExpressions: [ { key: 'node-role.kubernetes.io/gateway', operator: 'In', values: ['pedc'] }]}]}}
deployer.ingestion-edip-filter.kubernetes.affinity.nodeAffinity={ requiredDuringSchedulingIgnoredDuringExecution: { nodeSelectorTerms: [ { matchExpressions: [ { key: 'node-role.kubernetes.io/processing', operator: 'In', values: ['common']}]}]}}

deployer.ingestion-edip-trigger.count=1
deployer.ingestion-edip-trigger.environmentVariables=JAVA_TOOL_OPTIONS=-Xmx1024m
deployer.ingestion-edip-trigger.kubernetes.requests.cpu=500m
deployer.ingestion-edip-trigger.kubernetes.limits.cpu=800m
deployer.ingestion-edip-trigger.kubernetes.requests.memory=500Mi
deployer.ingestion-edip-trigger.kubernetes.limits.memory=900Mi

#deployer.ingestion-edip-trigger.kubernetes.configMapRefs=[ truststore ]
deployer.ingestion-edip-trigger.kubernetes.secretKeyRefs=[{ envVarName: 'EDIP_USERNAME', secretName: 'edippedc', dataKey: 'USERNAME' },{ envVarName: 'EDIP_PASSWORD', secretName: 'edippedc', dataKey: 'PASSWORD' },{ envVarName: 'MONGO_USERNAME', secretName: 'mongoingestion', dataKey: 'USERNAME' },{ envVarName: 'MONGO_PASSWORD', secretName: 'mongoingestion', dataKey: 'PASSWORD' }]
deployer.ingestion-edip-trigger.kubernetes.volumeMounts=[{ name: truststore, mountPath: '/ssl/truststore' }]
deployer.ingestion-edip-trigger.kubernetes.volumes=[{name: truststore, configMap: { name:  pedc-truststore, items: [{key: 'truststore.jks', path: 'truststore.jks'}]}}]
#deployer.preparation-worker.kubernetes.volumeMounts=[{name: tasktables, mountPath: '/app/tasktables'}] 
#deployer.preparation-worker.kubernetes.volumes=[{name: tasktables, configMap: {name: s1-l0aiop-tasktables, items: [{key: 'TaskTable.AIOP.xml', path: 'TaskTable.AIOP.xml'}]}}]

#deployer.ingestion-edip-trigger.kubernetes.secretKeyRefs=[{ envVarName: 'EDIP_USERNAME', secretName: 'edipbedc', dataKey: 'USERNAME' },{ envVarName: 'EDIP_PASSWORD', secretName: 'edipbedc', dataKey: 'PASSWORD' },{ envVarName: 'MONGO_USERNAME', secretName: 'mongoingestion', dataKey: 'USERNAME' },{ envVarName: 'MONGO_PASSWORD', secretName: 'mongoingestion', dataKey: 'PASSWORD' }]

deployer.ingestion-edip-filter.count=1
deployer.ingestion-edip-filter.environmentVariables=JAVA_TOOL_OPTIONS=-Xmx512m
deployer.ingestion-edip-filter.kubernetes.requests.memory=512Mi
deployer.ingestion-edip-filter.kubernetes.requests.cpu=160m
deployer.ingestion-edip-filter.kubernetes.limits.memory=600Mi
deployer.ingestion-edip-filter.kubernetes.limits.cpu=600m

deployer.ingestion-edip-worker.count=1
deployer.ingestion-edip-worker.environmentVariables=JAVA_TOOL_OPTIONS=-Xmx512m
deployer.ingestion-edip-worker.kubernetes.requests.memory=3500Mi
deployer.ingestion-edip-worker.kubernetes.requests.cpu=300m
deployer.ingestion-edip-worker.kubernetes.limits.memory=4000Mi
deployer.ingestion-edip-worker.kubernetes.limits.cpu=1300m

#Fix for linkerd latency
deployer.ingestion-edip-trigger.kubernetes.podAnnotations=config.linkerd.io/opaque-ports:21
deployer.ingestion-edip-trigger.kubernetes.podAnnotations=config.linkerd.io/skip-outbound-ports: 10000-10200
deployer.ingestion-edip-worker.kubernetes.podAnnotations=config.linkerd.io/opaque-ports:21
deployer.ingestion-edip-worker.kubernetes.podAnnotations=config.linkerd.io/skip-outbound-ports: 10000-10200

#deployer.ingestion-edip-trigger.kubernetes.configMapRefs=[s3-upload-cache,truststore]
deployer.ingestion-edip-worker.kubernetes.secretKeyRefs=[{ envVarName: 'OBS_USERNAME', secretName: 'obs', dataKey: 'USER_ID' },{ envVarName: 'OBS_PASSWORD', secretName: 'obs', dataKey: 'USER_SECRET' },{ envVarName: 'EDIP_USERNAME', secretName: 'edippedc', dataKey: 'USERNAME' },{ envVarName: 'EDIP_PASSWORD', secretName: 'edippedc', dataKey: 'PASSWORD' }]
#deployer.ingestion-edip-worker.kubernetes.secretKeyRefs=[{ envVarName: 'OBS_USERNAME', secretName: 'obs', dataKey: 'USER_ID' },{ envVarName: 'OBS_PASSWORD', secretName: 'obs', dataKey: 'USER_SECRET' },{ envVarName: 'EDIP_USERNAME', secretName: 'edipbedc', dataKey: 'USERNAME' },{ envVarName: 'EDIP_PASSWORD', secretName: 'edipbedc', dataKey: 'PASSWORD' }]
#deployer.ingestion-edip-worker.kubernetes.volumeMounts=[{ name: 's3-upload-cache', mountPath: '/opt/s3/uploadCache'}]
deployer.ingestion-edip-worker.kubernetes.volumeMounts=[{ name: 's3-upload-cache', mountPath: '/opt/s3/uploadCache'},{name: truststore, mountPath: '/ssl/truststore' }]
#deployer.ingestion-edip-worker.kubernetes.volumes=[{ name: 's3-upload-cache', emptyDir: { medium: 'Memory', sizeLimit: '1500Mi' }}]
#deployer.ingestion-edip-worker.kubernetes.volumes=[{ name: 's3-upload-cache', emptyDir: { medium: 'Memory', sizeLimit: '1500Mi' }}, {name: truststore, configmap: { name:  pedc-truststore}]
deployer.ingestion-edip-worker.kubernetes.volumes=[{ name: 's3-upload-cache', emptyDir: { medium: 'Memory', sizeLimit: '1500Mi' }}, { name: 'truststore', configMap: {  name:  pedc-truststore, items: [{ key: 'truststore.jks', path: 'truststore.jks' }] } } ]
#deployer.ingestion-edip-worker.kubernetes.volume-mounts=[ {name: script, mountPath: '/ssl/router-ew.groovy' } ]
#deployer.ingestion-edip-worker.kubernetes.volumes=[ {name: script, configmap: { name: s2-l0u-router-ew-script } } ]

# OBS properties
app.*.obs.user-id=${OBS_USERNAME}
app.*.obs.user-secret=${OBS_PASSWORD}
app.*.obs.endpoint=http://oss.eu-west-0.prod-cloud-ocb.orange-business.com
app.*.obs.endpoint-region=eu-west-0
app.*.obs.disable-chunked-encoding=false
app.*.obs.bucket.auxiliary-file=ops-rs-auxiliary-files
app.*.obs.bucket.edrs-session=ops-rs-session-files
app.*.obs.bucket.plan-and-report=ops-rs-s1-plans-and-reports
app.*.obs.bucket.l0-slice=ops-rs-l0-slices
app.*.obs.bucket.l0-acn=ops-rs-l0-acns
app.*.obs.bucket.l0-segment=ops-rs-l0-segments
app.*.obs.bucket.l0-blank=ops-rs-l0-blanks
app.*.obs.bucket.l1-slice=ops-rs-s1-l1-slices
app.*.obs.bucket.l1-acn=ops-rs-s1-l1-acns
app.*.obs.bucket.l2-slice=ops-rs-s1-l2-slices
app.*.obs.bucket.l2-acn=ops-rs-s1-l2-acns
app.*.obs.bucket.spp-mbu=ops-rs-s1-spp-mbu
app.*.obs.bucket.spp-obs=ops-rs-s1-spp
app.*.obs.bucket.invalid=ops-rs-s1-invalid
app.*.obs.bucket.ghost=ops-rs-ghost
app.*.obs.bucket.debug=ops-rs-debug
app.*.obs.bucket.failed-workdir=ops-rs-failed-workdir
app.*.obs.bucket.session-retransfer=ops-rs-session-retransfer
app.*.obs.bucket.auxiliary-file-zip=ops-rs-auxiliary-files-zip
app.*.obs.bucket.l0-slice-zip=ops-rs-l0-slices-zip
app.*.obs.bucket.l0-acn-zip=ops-rs-l0-acns-zip
app.*.obs.bucket.l0-segment-zip=ops-rs-l0-segments-zip
app.*.obs.bucket.l0-blank-zip=ops-rs-l0-blanks-zip
app.*.obs.bucket.l1-slice-zip=ops-rs-s1-l1-slices-zip
app.*.obs.bucket.l1-acn-zip=ops-rs-s1-l1-acns-zip
app.*.obs.bucket.l2-slice-zip=ops-rs-s1-l2-slices-zip
app.*.obs.bucket.l2-acn-zip=ops-rs-s1-l2-acns-zip
app.*.obs.bucket.spp-obs-zip=ops-rs-spp-zip
app.*.obs.bucket.plan-and-report-zip=ops-rs-plans-and-reports-zip

app.*.obs.bucket.s2-aux=ops-rs-s2-aux
app.*.obs.bucket.s2-l0-gr=ops-rs-s2-l0-gr
app.*.obs.bucket.s2-l0-ds=ops-rs-s2-l0-ds
app.*.obs.bucket.s2-hktm=ops-rs-s2-hktm
app.*.obs.bucket.s2-aux-zip=ops-rs-s2-aux-zip
app.*.obs.bucket.s2-l0-gr-zip=ops-rs-s2-l0-gr-zip
app.*.obs.bucket.s2-l0-ds-zip=ops-rs-s2-l0-ds-zip
app.*.obs.bucket.s2-hktm-zip=ops-rs-s2-hktm-zip

app.*.obs.bucket.s3-granules=ops-rs-granules
app.*.obs.bucket.s3-aux=ops-rs-aux
app.*.obs.bucket.s3-l0=ops-rs-l0
app.*.obs.bucket.s3-l1-nrt=ops-rs-s3-l1-nrt
app.*.obs.bucket.s3-l1-stc=ops-rs-s3-l1-stc
app.*.obs.bucket.s3-l1-ntc=ops-rs-s3-l1-ntc
app.*.obs.bucket.s3-l2-nrt=ops-rs-s3-l2-nrt 
app.*.obs.bucket.s3-l2-stc=ops-rs-s3-l2-stc
app.*.obs.bucket.s3-l2-ntc=ops-rs-s3-l2-ntc
app.*.obs.bucket.s3-cal=ops-rs-cal
app.*.obs.bucket.s3-pug=ops-rs-pug
app.*.obs.bucket.s3-granules-zip=ops-rs-granules-zip
app.*.obs.bucket.s3-aux-zip=ops-rs-aux-zip
app.*.obs.bucket.s3-l0-zip=ops-rs-l0-zip
app.*.obs.bucket.s3-l1-nrt-zip=ops-rs-s3-l1-nrt-zip
app.*.obs.bucket.s3-l1-stc-zip=ops-rs-s3-l1-stc-zip
app.*.obs.bucket.s3-l1-ntc-zip=ops-rs-s3-l1-ntc-zip
app.*.obs.bucket.s3-l2-nrt-zip=ops-rs-s3-l2-nrt-zip
app.*.obs.bucket.s3-l2-stc-zip=ops-rs-s3-l2-stc-zip
app.*.obs.bucket.s3-l2-ntc-zip=ops-rs-s3-l2-ntc-zip
app.*.obs.bucket.s3-cal-zip=ops-rs-cal-zip
app.*.obs.bucket.s3-pug-zip=ops-rs-pug-zip


