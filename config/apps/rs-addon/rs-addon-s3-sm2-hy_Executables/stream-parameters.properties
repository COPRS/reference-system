# General Application properties
app.*.spring.kafka.bootstrap-servers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.*.main.banner-mode=off
app.*.management.endpoints.web.exposure.include=*
app.*.management.endpoint.health.show-details=always

app.preparation-worker.logging.config=/log/log4j2.yml
app.housekeep.logging.config=/log/log4j2.yml
app.execution-worker.logging.config=/log/log4j2.yml

# Error Management
app.*.spring.cloud.stream.bindings.input.consumer.maxAttempts=3
app.*.spring.cloud.stream.kafka.bindings.input.consumer.enableDlq=true
app.*.spring.cloud.stream.kafka.bindings.input.consumer.dlqName=error-warning

# Topic replicas
app.*.spring.cloud.stream.kafka.binder.replicationFactor=3
app.*.spring.cloud.stream.kafka.streams.binder.replicationFactor=3
app.*.spring.cloud.stream.kafka.streams.binder.configuration.replication.factor=3
# Set retention for all topic 
app.*.spring.cloud.stream.kafka.bindings.input.consumer.topic.properties.retention.ms=2678400000
app.*.spring.cloud.stream.kafka.bindings.input.consumer.s3-sm2-hy-nrt-part1.message-filter.properties.retention.ms=2678400000
app.*.spring.cloud.stream.kafka.bindings.input.consumer.s3-sm2-hy-nrt-part1.preparation-worker.properties.retention.ms=2678400000
app.*.spring.cloud.stream.kafka.bindings.input.consumer.s3-sm2-hy-nrt-part2.time.properties.retention.ms=2678400000
# LagBalancing on Filter
app.preparation-worker.spring.cloud.stream.kafka.bindings.input.producer.configuration.partitioner.class=esa.s1pdgs.cpoc.message.kafka.LagBasedPartitioner
app.preparation-worker.spring.cloud.stream.kafka.binder.producerProperties.lag-based-partitioner.delay-seconds=30
app.preparation-worker.spring.cloud.stream.kafka.binder.producerProperties.lag-based-partitioner.consumer-group=s3-sm2-hy-nrt-part1
app.preparation-worker.spring.cloud.stream.kafka.binder.producerProperties.lag-based-partitioner.topics-with-priority.s3-sm2-hy-nrt-part1.preparation-worker=1
# Set Partition to have YYY Partition
app.preparation-worker.spring.cloud.stream.kafka.binder.autoAddPartitions=true
app.preparation-worker.spring.cloud.stream.kafka.binder.minPartitionCount=30

#WA RS-851
app.preparation-worker.s3-type-adapter.dyn-proc-params.facilityName=LN3
app.housekeep.s3-type-adapter.dyn-proc-params.facilityName=LN3

# Custom Application properties
## Filter
app.message-filter.filter.function.expression=((payload.productFamily == 'S3_L1_NRT') && (payload.keyObjectStorage matches '^S3\\w{2}(SR_1_SRA_A_|SR_1_LAN_RD|MW_1_MWR___).*')) || ((payload.productFamily == 'S3_AUX') && (payload.keyObjectStorage matches '^S3\\w{2}(AX___(FPO|OSF|FRO|BB2|MF1|MF2|CST)_|SR_2_(NRPP|MAG_|POL_|PGI_|SIC_|COHY|SI01|SI02|SI03|SI04|SI05|SI06|SI07|SI08|SI09|SI10|SI11|SI12|IC01|IC02|IC03|IC04|IC05|IC06|IC07|IC08|IC09|IC10|EOT1|EOT2|LT1_|LT2_|LNEQ|MSS1|MSS2|GEO_|ODLE|WNDL|WNDS|SIGL|SIGS|SET_|SSM_|MSMG|CP00|CP06|CP12|CP18|S1AM|S2AM|S1PH|S2PH|MDT_|SHD_|SSBL|SSBS|SD01|SD02|SD03|SD04|SD05|SD06|SD07|SD08|SD09|SD10|SD11|SD12|SST_|LRC_|SFL_|RRC_|FLT_|CCT_|SURF|RET_|MLM_|THM_|LUTF|LUTE|LUTH|POT_|)|SR___(ROE_|CHDN|CHDR|LSM_)|MW___(CHDN|CHDR))AX.*')) || ((payload.productFamily == 'S3_L0') && (payload.keyObjectStorage matches '^S3\\w{2}(DO_0_NAV___).*')) || ((payload.productFamily == 'S3_L0') && (payload.keyObjectStorage matches '^S3\\w{2}TM_0_NAT___.*'))

## Preparation Worker
app.preparation-worker.spring.cloud.stream.kafka.bindings.input.consumer.configuration.max.poll.records=1
app.preparation-worker.spring.cloud.stream.kafka.bindings.input.consumer.configuration.max.poll.interval.ms=60000
app.preparation-worker.spring.cloud.stream.function.bindings.prepareExecutionJobs-in-0=input
app.preparation-worker.spring.cloud.stream.function.bindings.prepareExecutionJobs-out-0=output
app.preparation-worker.spring.cloud.stream.function.definition=prepareExecutionJobs

app.preparation-worker.mongodb.host=mongodb-0.mongodb-headless.database.svc.cluster.local
app.preparation-worker.mongodb.port=27017
app.preparation-worker.mongodb.database=coprs
app.preparation-worker.mongodb.username=${MONGO_USERNAME}
app.preparation-worker.mongodb.password=${MONGO_PASSWORD}

app.preparation-worker.metrics.mission=S3
app.preparation-worker.metrics.level=2
app.preparation-worker.metrics.addonName=sm2-hy

app.preparation-worker.metadata.metadataHostname=rs-metadata-catalog-searchcontroller-svc:8080
app.preparation-worker.metadata.nbretry=3
app.preparation-worker.metadata.temporetryms=1000

app.preparation-worker.process.level=S3_L2
app.preparation-worker.process.mode=PROD
app.preparation-worker.process.hostname=s3-sm2-hy-preparation-worker
app.preparation-worker.process.productType=S3_L1_NRT
app.preparation-worker.process.loglevelstdout=INFO
app.preparation-worker.process.loglevelstderr=INFO
app.preparation-worker.process.processingstation=S3__
app.preparation-worker.process.params.Processing_Mode=NRT
app.preparation-worker.process.params.Timeout=300
app.preparation-worker.process.mission=S3
app.preparation-worker.worker.primaryCheckMaxTimelifeS=900

app.preparation-worker.worker.diroftasktables=/app/tasktables/
app.preparation-worker.worker.maxnboftasktable=2
app.preparation-worker.worker.defaultfamily=BLANK
app.preparation-worker.worker.inputfamiliesstr=\\w{10}G:S3_GRANULES||\\w{10}X:S3_AUX||\\w{3}0\\w{6}(?!(G|X))\\w{1}:S3_L0||\\w{3}1\\w{6}(?!(G|X))\\w{1}:S3_L1_NRT||\\w{3}2\\w{6}(?!(G|X))\\w{1}:S3_L2_NRT
app.preparation-worker.worker.outputfamiliesstr=\\w{10}X:S3_AUX||\\w{3}0\\w{6}(?!(G|X))\\w{1}:S3_L0||\\w{3}1\\w{6}(?!(G|X))\\w{1}:S3_L1_NRT||\\w{3}2\\w{6}(?!(G|X))\\w{1}:S3_L2_NRT
app.preparation-worker.worker.product-mode=NRT
app.preparation-worker.worker.pathTaskTableXslt=/app/xslt/tasktable.xslt

app.preparation-worker.tasktable.routingKeyTemplate=$(product.productType)_$(product.satelliteId)
app.preparation-worker.tasktable.routing.SR_1_SRA_A__A=TaskTable_S3A_SM2_HY_07_02.xml
app.preparation-worker.tasktable.routing.SR_1_SRA_A__B=TaskTable_S3B_SM2_HY_07_02.xml
app.preparation-worker.tasktable.routing.SR_1_LAN_RD_A=TaskTable_S3A_SM2_HY_07_02.xml
app.preparation-worker.tasktable.routing.SR_1_LAN_RD_B=TaskTable_S3B_SM2_HY_07_02.xml
app.preparation-worker.tasktable.routing.MW_1_MWR____A=TaskTable_S3A_SM2_HY_07_02.xml
app.preparation-worker.tasktable.routing.MW_1_MWR____B=TaskTable_S3B_SM2_HY_07_02.xml

app.preparation-worker.s3-type-adapter.optionalOutputs.S3A_SM2_HY=SR_2_LAN_HY,SR_1_LAN_BS
app.preparation-worker.s3-type-adapter.optionalOutputs.S3B_SM2_HY=SR_2_LAN_HY,SR_1_LAN_BS

## Housekeeping Service
app.housekeep.spring.cloud.stream.kafka.bindings.input.consumer.configuration.max.poll.records=1
app.housekeep.spring.cloud.stream.kafka.bindings.input.consumer.configuration.max.poll.interval.ms=60000
app.time.spring.integration.poller.fixed-rate=60s

app.housekeep.spring.cloud.stream.function.bindings.houseKeepAppDataJobs-in-0=input
app.housekeep.spring.cloud.stream.function.bindings.houseKeepAppDataJobs-out-0=output
app.housekeep.spring.cloud.stream.function.definition=houseKeepAppDataJobs

app.housekeep.mongodb.host=mongodb-0.mongodb-headless.database.svc.cluster.local
app.housekeep.mongodb.port=27017
app.housekeep.mongodb.database=coprs
app.housekeep.mongodb.username=${MONGO_USERNAME}
app.housekeep.mongodb.password=${MONGO_PASSWORD}

app.housekeep.metadata.metadataHostname=rs-metadata-catalog-searchcontroller-svc:8080
app.housekeep.metadata.nbretry=3
app.housekeep.metadata.temporetryms=1000

app.housekeep.process.level=S3_L2
app.housekeep.process.mode=PROD
app.housekeep.process.hostname=s3-sm2-hy-preparation-worker
app.housekeep.process.productType=S3_L1_NRT
app.housekeep.process.loglevelstdout=INFO
app.housekeep.process.loglevelstderr=INFO
app.housekeep.process.processingstation=S3__
app.housekeep.process.params.Processing_Mode=NRT
app.housekeep.process.params.Timeout=300
app.housekeep.process.mission=S3

app.housekeep.worker.diroftasktables=/app/tasktables/
app.housekeep.worker.maxnboftasktable=2
app.housekeep.worker.defaultfamily=BLANK
app.housekeep.worker.inputfamiliesstr=\\w{10}G:S3_GRANULES||\\w{10}X:S3_AUX||\\w{3}0\\w{6}(?!(G|X))\\w{1}:S3_L0||\\w{3}1\\w{6}(?!(G|X))\\w{1}:S3_L1_NRT||\\w{3}2\\w{6}(?!(G|X))\\w{1}:S3_L2_NRT
app.housekeep.worker.outputfamiliesstr=\\w{10}X:S3_AUX||\\w{3}0\\w{6}(?!(G|X))\\w{1}:S3_L0||\\w{3}1\\w{6}(?!(G|X))\\w{1}:S3_L1_NRT||\\w{3}2\\w{6}(?!(G|X))\\w{1}:S3_L2_NRT
app.housekeep.worker.product-mode=NRT
app.housekeep.worker.pathTaskTableXslt=/app/xslt/tasktable.xslt
app.housekeep.worker.primaryCheckMaxTimelifeS=900
app.housekeep.worker.maxAgeJobMs.waiting=604800000
app.housekeep.worker.maxAgeJobMs.dispatching=604800000
app.housekeep.worker.maxAgeJobMs.generating=604800000
app.housekeep.worker.maxAgeJobMs.terminated=604800000

app.housekeep.tasktable.routingKeyTemplate=$(product.productType)_$(product.satelliteId)
app.housekeep.tasktable.routing.SR_1_SRA_A__A=TaskTable_S3A_SM2_HY_07_02.xml
app.housekeep.tasktable.routing.SR_1_SRA_A__B=TaskTable_S3B_SM2_HY_07_02.xml
app.housekeep.tasktable.routing.SR_1_LAN_RD_A=TaskTable_S3A_SM2_HY_07_02.xml
app.housekeep.tasktable.routing.SR_1_LAN_RD_B=TaskTable_S3B_SM2_HY_07_02.xml
app.housekeep.tasktable.routing.MW_1_MWR____A=TaskTable_S3A_SM2_HY_07_02.xml
app.housekeep.tasktable.routing.MW_1_MWR____B=TaskTable_S3B_SM2_HY_07_02.xml

app.housekeep.s3-type-adapter.optionalOutputs.S3A_SM2_HY=SR_2_LAN_HY,SR_1_LAN_BS
app.housekeep.s3-type-adapter.optionalOutputs.S3B_SM2_HY=SR_2_LAN_HY,SR_1_LAN_BS

## Execution Worker
app.execution-worker.spring.cloud.stream.function.bindings.executeJob-in-0=input
app.execution-worker.spring.cloud.stream.function.bindings.executeJob-out-0=output
app.execution-worker.spring.cloud.stream.function.definition=executeJob
app.execution-worker.spring.cloud.stream.kafka.bindings.input.consumer.configuration.max.poll.records=1
app.execution-worker.spring.cloud.stream.kafka.bindings.input.consumer.configuration.max.poll.interval.ms=3600000

app.execution-worker.process.level=S3_L2
app.execution-worker.process.hostname=${HOSTNAME}
app.execution-worker.process.workingDir=/data/localWD
app.execution-worker.process.tm-proc-stop-s=300
app.execution-worker.process.tm-proc-one-task-s=600
app.execution-worker.process.tm-proc-all-tasks-s=3600
app.execution-worker.process.tm-proc-check-stop-s=60
app.execution-worker.process.size-batch-upload=10
app.execution-worker.process.size-batch-download=10
app.execution-worker.process.wap-nb-max-loop=24
app.execution-worker.process.wap-tempo-s=20
app.execution-worker.process.path-job-order-xslt=/app/joborder/jobOrder.xslt
app.execution-worker.dev.stepsActivation.download=true
app.execution-worker.dev.stepsActivation.upload=true
app.execution-worker.dev.stepsActivation.erasing=true

# Output Product Estimation 
app.execution-worker.process.productTypeEstimationEnabled=true

# Mandatory Deployer Settings
deployer.time.kubernetes.imagePullPolicy=IfNotPresent
deployer.message-filter.kubernetes.imagePullPolicy=IfNotPresent
deployer.preparation-worker.kubernetes.imagePullPolicy=Always
deployer.preparation-worker.kubernetes.imagePullSecrets=spring-cloud-dataflow-registry-dockersecret
deployer.housekeep.kubernetes.imagePullPolicy=Always
deployer.housekeep.kubernetes.imagePullSecrets=spring-cloud-dataflow-registry-dockersecret
deployer.execution-worker.kubernetes.imagePullPolicy=Always
deployer.execution-worker.kubernetes.imagePullSecrets=spring-cloud-dataflow-registry-dockersecret

# Liveness Probe
deployer.*.kubernetes.namespace=processing
deployer.*.kubernetes.livenessProbeDelay=10
deployer.*.kubernetes.livenessProbePeriod=120
deployer.*.kubernetes.livenessProbeTimeout=20
deployer.*.kubernetes.livenessProbePath=/actuator/health/liveness
deployer.*.kubernetes.livenessProbePort=8080

# Readiness Probe
deployer.*.kubernetes.readinessProbeDelay=10
deployer.*.kubernetes.readinessProbePeriod=120
deployer.*.kubernetes.readinessProbeTimeout=20
deployer.*.kubernetes.readinessProbePath=/actuator/health/readiness
deployer.*.kubernetes.readinessProbePort=8080

# Resources
deployer.*.kubernetes.requests.memory=512Mi
deployer.*.kubernetes.requests.cpu=500m
deployer.*.kubernetes.limits.memory=4000Mi
deployer.*.kubernetes.limits.cpu=1500m

deployer.*.kubernetes.maxTerminatedErrorRestarts=20

# Additional Deployer Settings
deployer.*.kubernetes.environmentVariables=JAVA_TOOL_OPTIONS=-Xmx512m

deployer.preparation-worker.kubernetes.requests.memory=390Mi
deployer.preparation-worker.kubernetes.requests.cpu=100m
deployer.preparation-worker.kubernetes.limits.memory=1560Mi
deployer.preparation-worker.kubernetes.limits.cpu=500m
deployer.preparation-worker.kubernetes.secretKeyRefs=[{ envVarName: 'MONGO_USERNAME', secretName: 'mongopreparation', dataKey: 'USERNAME' },{ envVarName: 'MONGO_PASSWORD', secretName: 'mongopreparation', dataKey: 'PASSWORD' }]
deployer.preparation-worker.kubernetes.volumeMounts=[{name: tasktables, mountPath: '/app/tasktables'},{name: tasktablexslt, mountPath: '/app/xslt'}] 
deployer.preparation-worker.kubernetes.volumes=[{name: tasktablexslt, configMap: {name: s3-sm2-hy-tasktablexslt, items: [{key: 'tasktable.xslt', path: 'tasktable.xslt'}]}},{name: tasktables, configMap: {name: s3-sm2-hy-tasktables, items: [{key: 'TaskTable_S3A_SM2_HY_07_02.xml', path: 'TaskTable_S3A_SM2_HY_07_02.xml'},{key: 'TaskTable_S3B_SM2_HY_07_02.xml', path: 'TaskTable_S3B_SM2_HY_07_02.xml'}]}}]

deployer.housekeep.kubernetes.requests.memory=390Mi
deployer.housekeep.kubernetes.requests.cpu=100m
deployer.housekeep.kubernetes.limits.memory=1560Mi
deployer.housekeep.kubernetes.limits.cpu=500m
deployer.housekeep.kubernetes.secretKeyRefs=[{ envVarName: 'MONGO_USERNAME', secretName: 'mongopreparation', dataKey: 'USERNAME' },{ envVarName: 'MONGO_PASSWORD', secretName: 'mongopreparation', dataKey: 'PASSWORD' }]
deployer.housekeep.kubernetes.volumeMounts=[{name: tasktables, mountPath: '/app/tasktables'},{name: tasktablexslt, mountPath: '/app/xslt'}] 
deployer.housekeep.kubernetes.volumes=[{name: tasktablexslt, configMap: {name: s3-sm2-hy-tasktablexslt, items: [{key: 'tasktable.xslt', path: 'tasktable.xslt'}]}},{name: tasktables, configMap: {name: s3-sm2-hy-tasktables, items: [{key: 'TaskTable_S3A_SM2_HY_07_02.xml', path: 'TaskTable_S3A_SM2_HY_07_02.xml'},{key: 'TaskTable_S3B_SM2_HY_07_02.xml', path: 'TaskTable_S3B_SM2_HY_07_02.xml'}]}}] 

deployer.execution-worker.kubernetes.requests.memory=16000Mi
deployer.execution-worker.kubernetes.requests.cpu=7000m
deployer.execution-worker.kubernetes.limits.memory=16000Mi
deployer.execution-worker.kubernetes.limits.cpu=7000m












deployer.execution-worker.kubernetes.secretKeyRefs=[{ envVarName: 'OBS_USERNAME', secretName: 'obs', dataKey: 'USER_ID' },{ envVarName: 'OBS_PASSWORD', secretName: 'obs', dataKey: 'USER_SECRET' }]
deployer.execution-worker.kubernetes.podSecurityContext={runAsUser: 0, fsGroup: 0}
deployer.execution-worker.kubernetes.volumeMounts=[{name: joborderxslt, mountPath: '/app/joborder'}, { name: 's3-upload-cache', mountPath: '/opt/s3/uploadCache'}] 
deployer.execution-worker.kubernetes.volumes=[{name: joborderxslt, configMap: {name: s3-sm2-hy-joborderxslt, items: [{key: 'jobOrder.xslt', path: 'jobOrder.xslt'}]}}, { name: 's3-upload-cache', emptyDir: { medium: 'Memory', sizeLimit: '1500Mi' }}]

#Node affinity configuration
deployer.*.kubernetes.affinity.nodeAffinity={ requiredDuringSchedulingIgnoredDuringExecution: { nodeSelectorTerms: [ { matchExpressions: [ { key: 'node-role.kubernetes.io/processing', operator: 'In', values: 'common'}]}]}}

# OBS properties

app.*.obs.user-id=${OBS_USERNAME}
app.*.obs.user-secret=${OBS_PASSWORD}
app.*.obs.endpoint=http://oss.eu-west-0.prod-cloud-ocb.orange-business.com
app.*.obs.endpoint-region=eu-west-0
app.*.obs.disable-chunked-encoding=false
app.*.obs.bucket.auxiliary-file=ops-rs-auxiliary-files
app.*.obs.bucket.edrs-session=ops-rs-session-files
app.*.obs.bucket.plan-and-report=ops-rs-s1-plans-and-reports
app.*.obs.bucket.l0-slice=ops-rs-l0-slices
app.*.obs.bucket.l0-acn=ops-rs-l0-acns
app.*.obs.bucket.l0-segment=ops-rs-l0-segments
app.*.obs.bucket.l0-blank=ops-rs-l0-blanks
app.*.obs.bucket.l1-slice=ops-rs-s1-l1-slices
app.*.obs.bucket.l1-acn=ops-rs-s1-l1-acns
app.*.obs.bucket.l2-slice=ops-rs-s1-l2-slices
app.*.obs.bucket.l2-acn=ops-rs-s1-l2-acns
app.*.obs.bucket.spp-mbu=ops-rs-s1-spp-mbu
app.*.obs.bucket.spp-obs=ops-rs-s1-spp
app.*.obs.bucket.invalid=ops-rs-s1-invalid
app.*.obs.bucket.ghost=ops-rs-ghost
app.*.obs.bucket.debug=ops-rs-debug
app.*.obs.bucket.failed-workdir=ops-rs-failed-workdir
app.*.obs.bucket.session-retransfer=ops-rs-session-retransfer
app.*.obs.bucket.auxiliary-file-zip=ops-rs-auxiliary-files-zip
app.*.obs.bucket.l0-slice-zip=ops-rs-l0-slices-zip
app.*.obs.bucket.l0-acn-zip=ops-rs-l0-acns-zip
app.*.obs.bucket.l0-segment-zip=ops-rs-l0-segments-zip
app.*.obs.bucket.l0-blank-zip=ops-rs-l0-blanks-zip
app.*.obs.bucket.l1-slice-zip=ops-rs-s1-l1-slices-zip
app.*.obs.bucket.l1-acn-zip=ops-rs-s1-l1-acns-zip
app.*.obs.bucket.l2-slice-zip=ops-rs-s1-l2-slices-zip
app.*.obs.bucket.l2-acn-zip=ops-rs-s1-l2-acns-zip
app.*.obs.bucket.spp-obs-zip=ops-rs-spp-zip
app.*.obs.bucket.plan-and-report-zip=ops-rs-plans-and-reports-zip

app.*.obs.bucket.s2-aux=ops-rs-s2-aux
app.*.obs.bucket.s2-l0-gr=ops-rs-s2-l0-gr
app.*.obs.bucket.s2-l0-ds=ops-rs-s2-l0-ds
app.*.obs.bucket.s2-hktm=ops-rs-s2-hktm
app.*.obs.bucket.s2-aux-zip=ops-rs-s2-aux-zip
app.*.obs.bucket.s2-l0-gr-zip=ops-rs-s2-l0-gr-zip
app.*.obs.bucket.s2-l0-ds-zip=ops-rs-s2-l0-ds-zip
app.*.obs.bucket.s2-hktm-zip=ops-rs-s2-hktm-zip

app.*.obs.bucket.s3-granules=ops-rs-granules
app.*.obs.bucket.s3-aux=ops-rs-aux
app.*.obs.bucket.s3-l0=ops-rs-l0
app.*.obs.bucket.s3-l1-nrt=ops-rs-s3-l1-nrt
app.*.obs.bucket.s3-l1-stc=ops-rs-s3-l1-stc
app.*.obs.bucket.s3-l1-ntc=ops-rs-s3-l1-ntc
app.*.obs.bucket.s3-l2-nrt=ops-rs-s3-l2-nrt
app.*.obs.bucket.s3-l2-stc=ops-rs-s3-l2-stc
app.*.obs.bucket.s3-l2-ntc=ops-rs-s3-l2-ntc
app.*.obs.bucket.s3-cal=ops-rs-cal
app.*.obs.bucket.s3-pug=ops-rs-pug
app.*.obs.bucket.s3-granules-zip=ops-rs-granules-zip
app.*.obs.bucket.s3-aux-zip=ops-rs-aux-zip
app.*.obs.bucket.s3-l0-zip=ops-rs-l0-zip
app.*.obs.bucket.s3-l1-nrt-zip=ops-rs-s3-l1-nrt-zip
app.*.obs.bucket.s3-l1-stc-zip=ops-rs-s3-l1-stc-zip
app.*.obs.bucket.s3-l1-ntc-zip=ops-rs-s3-l1-ntc-zip
app.*.obs.bucket.s3-l2-nrt-zip=ops-rs-s3-l2-nrt-zip
app.*.obs.bucket.s3-l2-stc-zip=ops-rs-s3-l2-stc-zip
app.*.obs.bucket.s3-l2-ntc-zip=ops-rs-s3-l2-ntc-zip
app.*.obs.bucket.s3-cal-zip=ops-rs-cal-zip
app.*.obs.bucket.s3-pug-zip=ops-rs-pug-zip
# Common Application properties
app.*.common.rsChainName=S3-SM2-HY
app.*.common.rsChainVersion=1.10.0-rc1

version.message-filter=3.1.1
version.housekeep=1.10.0-rc1
version.time=3.2.1
version.preparation-worker=1.10.0-rc1
version.execution-worker=1.10.0-rc1
