name: Trivy-Security-Scan

# Controls when the workflow will run
         
inputs:
  SEVERITY:
    required: true
    type: string
  EXIT_CODE:
    required: true
    type: string
  IMAGE_REF: 
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Run Trivy vulnerability scanner HTML
      uses: aquasecurity/trivy-action@master
      continue-on-error: true
      with:
        image-ref: '${{ inputs.IMAGE_REF }}'
        format: 'template'
        template: '@/contrib/html.tpl'
        output: 'vulnerabilities.html'
        exit-code: ${{ inputs.EXIT_CODE }}
        ignore-unfixed: false
        vuln-type: 'os,library'
        severity: ${{ inputs.SEVERITY }}

    - name: Run Trivy vulnerability scanner SARIF
      uses: aquasecurity/trivy-action@master
      continue-on-error: true
      with:
        image-ref: '${{ inputs.IMAGE_REF }}'
        format: 'sarif'
        output: trivy-results.sarif
        exit-code: ${{ inputs.EXIT_CODE }}
        ignore-unfixed: false
        vuln-type: 'os,library'
        severity: ${{ inputs.SEVERITY }}

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
        category: 'Security-Scan'

    - name: Run Trivy vulnerability scanner JSON
      uses: aquasecurity/trivy-action@master
      continue-on-error: true
      with:
        image-ref: '${{ inputs.IMAGE_REF }}'
        format: 'json'
        output: 'vulnerabilities.json'
        exit-code: ${{ inputs.EXIT_CODE }}
        ignore-unfixed: false
        vuln-type: 'os,library'
        severity: ${{ inputs.SEVERITY }}

    - name: Generate CSV
      shell: bash
      run: |
        cat vulnerabilities.json | jq --raw-output '[ "SEVERITY", "ID", "PACKAGE", "VERSION", "LINK" ], ( .Results[].Vulnerabilities[]? | [.Severity, .VulnerabilityID, .PkgName, .InstalledVersion, .PrimaryURL]?) | @csv' > vulnerabilities.csv

    - name: Convert HTML to PDF
      uses: docker://ghcr.io/coprs/reference-system:dependencies_wkhtmltopdf
      with:
        args: --orientation Landscape vulnerabilities.html vulnerabilities.pdf

    - name: Upload Anchore scan reports
      uses: actions/upload-artifact@master
      with:
        name: vulnerabilities-${{ inputs.IMAGE_REF }}
        path: |
          vulnerabilities.html
          vulnerabilities.pdf
          vulnerabilities.csv
          vulnerabilities.json

